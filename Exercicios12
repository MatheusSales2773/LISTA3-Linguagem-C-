#include <stdio.h>
#include <stdlib.h>

#define TAM_VETOR 5 

typedef struct Aluno {
  char nome[50];
  int matricula;
  float media;
} Aluno;

void preencherAlunos(Aluno *alunos) {
  for (int i = 0; i < TAM_VETOR; i++) {
    printf("Digite o nome do aluno %d: ", i + 1);
    scanf("%s", alunos[i].nome);

    printf("Digite a matricula do aluno %d: ", i + 1);
    scanf("%d", &alunos[i].matricula);

    printf("Digite a media do aluno %d: ", i + 1);
    scanf("%f", &alunos[i].media);
  }
}

void imprimirAlunos(Aluno *alunos) {
  for (int i = 0; i < TAM_VETOR; i++) {
    printf("Aluno %d:\n", i + 1);
    printf("Nome: %s\n", alunos[i].nome);
    printf("Matricula: %d\n", alunos[i].matricula);
    printf("Media: %.2f\n\n", alunos[i].media);
  }
}

int compararNome(const void *a, const void *b) {
  Aluno *aluno1 = (Aluno *)a;
  Aluno *aluno2 = (Aluno *)b;
  return strcmp(aluno1->nome, aluno2->nome);
}

int compararMatricula(const void *a, const void *b) {
  Aluno *aluno1 = (Aluno *)a;
  Aluno *aluno2 = (Aluno *)b;
  return aluno1->matricula - aluno2->matricula;
}

int compararMedia(const void *a, const void *b) {
  Aluno *aluno1 = (Aluno *)a;
  Aluno *aluno2 = (Aluno *)b;
  if (aluno1->media < aluno2->media) {
    return -1;
  } else if (aluno1->media > aluno2->media) {
    return 1;
  } else {
    return 0;
  }
}

int main() {
  Aluno alunos[TAM_VETOR];

  preencherAlunos(alunos);

  printf("Alunos nao ordenados:\n\n");
  imprimirAlunos(alunos);
  
  qsort(alunos, TAM_VETOR, sizeof(Aluno), compararNome);
  printf("\nAlunos ordenados por nome:\n\n");
  imprimirAlunos(alunos);
 
  qsort(alunos, TAM_VETOR, sizeof(Aluno), compararMatricula);
  printf("\nAlunos ordenados por matricula:\n\n");
  imprimirAlunos(alunos);
 
  qsort(alunos, TAM_VETOR, sizeof(Aluno), compararMedia);
  printf("\nAlunos ordenados por media:\n\n");
  imprimirAlunos(alunos);

  return 0;
}

